"""db complete

Revision ID: a1b0d81311c4
Revises: 
Create Date: 2023-09-22 18:31:46.383144

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a1b0d81311c4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id_category', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Enum('meat', 'seafood', 'beverage', 'nonfood', 'bakery', name='categorytype'), nullable=True),
    sa.PrimaryKeyConstraint('id_category')
    )
    op.create_table('products',
    sa.Column('id_product', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('picture', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Enum('meat', 'seafood', 'beverage', 'nonfood', 'bakery', name='categorytype'), nullable=True),
    sa.PrimaryKeyConstraint('id_product')
    )
    op.create_table('roles',
    sa.Column('id_role', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Enum('admin', 'client', name='roletype'), nullable=True),
    sa.PrimaryKeyConstraint('id_role')
    )
    op.create_table('users',
    sa.Column('id_user', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id_role'], ),
    sa.PrimaryKeyConstraint('id_user'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('orders',
    sa.Column('id_order', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('total', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id_user'], ),
    sa.PrimaryKeyConstraint('id_order')
    )
    op.create_table('order_details',
    sa.Column('id_order_detail', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total', sa.Float(), nullable=True),
    sa.CheckConstraint('quantity > 0', name='check_quantity_positive'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id_order'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id_product'], ),
    sa.PrimaryKeyConstraint('id_order_detail')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_details')
    op.drop_table('orders')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('products')
    op.drop_table('categories')
    # ### end Alembic commands ###
