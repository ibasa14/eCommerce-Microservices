version: '3.3'

services:
  product_db:
    image: postgres:latest
    container_name: product_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_PRODUCT}
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - ./dev/postgresql_product_db_data/:/var/lib/postgresql/data/
      - ./dev/sql/:/var/lib/postgresql/sql
    expose:
      - ${POSTGRES_PORT_PRODUCT}
    ports:
      - 5433:${POSTGRES_PORT_PRODUCT}

  product:
    container_name: product
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./product/
    command: tail -F anything
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DEBUG=${DEBUG}
      - POSTGRES_DB=${POSTGRES_DB_PRODUCT}
      - POSTGRES_HOST=${POSTGRES_HOST_PRODUCT}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT_PRODUCT}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - SERVER_HOST=${PRODUCT_HOST}
      - SERVER_PORT=${PRODUCT_PORT}
      - SERVER_WORKERS=${PRODUCT_WORKERS}
      - DB_TIMEOUT=${DB_TIMEOUT}
      - DB_POOL_SIZE=${DB_POOL_SIZE}
      - DB_MAX_POOL_CON=${DB_MAX_POOL_CON}
      - DB_POOL_OVERFLOW=${DB_POOL_OVERFLOW}
      - IS_DB_ECHO_LOG=${IS_DB_ECHO_LOG}
      - IS_DB_EXPIRE_ON_COMMIT=${IS_DB_EXPIRE_ON_COMMIT}
      - IS_DB_FORCE_ROLLBACK=${IS_DB_FORCE_ROLLBACK}
      - IS_ALLOWED_CREDENTIALS=${IS_ALLOWED_CREDENTIALS}
      - API_TOKEN=${API_TOKEN}
      - AUTH_TOKEN=${AUTH_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_SUBJECT=${JWT_SUBJECT}
      - JWT_TOKEN_PREFIX=${JWT_TOKEN_PREFIX}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_MIN=${JWT_MIN}
      - JWT_HOUR=${JWT_HOUR}
      - JWT_DAY=${JWT_DAY}
      - HASHING_ALGORITHM_LAYER_1=${HASHING_ALGORITHM_LAYER_1}
      - HASHING_ALGORITHM_LAYER_2=${HASHING_ALGORITHM_LAYER_2}
      - HASHING_SALT=${HASHING_SALT}
    volumes:
      - ./product/:/usr/product/
    expose:
      - ${PRODUCT_PORT}
    ports:
      - 8001:${PRODUCT_PORT}
    depends_on:
      - product_db

  account_db:
    image: postgres:latest
    container_name: account_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_ACCOUNT}
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - ./dev/postgresql_account_db_data/:/var/lib/postgresql/data/
      - ./dev/sql/:/var/lib/postgresql/sql
    expose:
      - ${POSTGRES_PORT_ACCOUNT}
    ports:
      - 5435:${POSTGRES_PORT_ACCOUNT}
    command: -p ${POSTGRES_PORT_ACCOUNT}

  authentication:
    container_name: authentication
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./authentication/
    command: tail -F anything
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DEBUG=${DEBUG}
      - POSTGRES_DB=${POSTGRES_DB_ACCOUNT}
      - POSTGRES_HOST=${POSTGRES_HOST_ACCOUNT}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT_ACCOUNT}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - SERVER_HOST=${AUTHENTICATION_HOST}
      - SERVER_PORT=${AUTHENTICATION_PORT}
      - SERVER_WORKERS=${AUTHENTICATION_WORKERS}
      - DB_TIMEOUT=${DB_TIMEOUT}
      - DB_POOL_SIZE=${DB_POOL_SIZE}
      - DB_MAX_POOL_CON=${DB_MAX_POOL_CON}
      - DB_POOL_OVERFLOW=${DB_POOL_OVERFLOW}
      - IS_DB_ECHO_LOG=${IS_DB_ECHO_LOG}
      - IS_DB_EXPIRE_ON_COMMIT=${IS_DB_EXPIRE_ON_COMMIT}
      - IS_DB_FORCE_ROLLBACK=${IS_DB_FORCE_ROLLBACK}
      - IS_ALLOWED_CREDENTIALS=${IS_ALLOWED_CREDENTIALS}
      - API_TOKEN=${API_TOKEN}
      - AUTH_TOKEN=${AUTH_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_SUBJECT=${JWT_SUBJECT}
      - JWT_TOKEN_PREFIX=${JWT_TOKEN_PREFIX}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_MIN=${JWT_MIN}
      - JWT_HOUR=${JWT_HOUR}
      - JWT_DAY=${JWT_DAY}
      - HASHING_ALGORITHM_LAYER_1=${HASHING_ALGORITHM_LAYER_1}
      - HASHING_ALGORITHM_LAYER_2=${HASHING_ALGORITHM_LAYER_2}
      - HASHING_SALT=${HASHING_SALT}
    volumes:
      - ./authentication/:/usr/authentication/
    expose:
      - ${AUTHENTICATION_PORT}
    ports:
      - 8003:${AUTHENTICATION_PORT}
    depends_on:
      - account_db

volumes:
  postgresql_product_db_data:
  postgresql_account_db_data:
